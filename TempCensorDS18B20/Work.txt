/*
Controlling the tempetature sensor DS18B20 with the Arduino
http://www.hobbytronics.co.uk/ds18b20-arduino
http://www.hacktronics.com/Tutorials/arduino-1-wire-address-finder.html

Ref http://arduino.cc/en/Reference/HomePage
*/

#include "OneWire.h"
#include "DallasTemperature.h"
#include "fArduino.h"

#define ONE_WIRE_BUS 3
OneWire             ds(ONE_WIRE_BUS); // Setup a oneWire instance to communicate with any OneWire devices  (not just Maxim/Dallas temperature ICs)
TimeOut             _oneSecondTimeOut(1000);

#define DS18S20_ID 0x10
 #define DS18B20_ID 0x28
 float temp;

boolean getTemperature(){
  
     byte i;
     byte present = 0;
     byte data[12];
     byte addr[8];
     //find a device
     if (!ds.search(addr)) {
       ds.reset_search();
       return false;
     }
     if (OneWire::crc8( addr, 7) != addr[7]) {
       return false;
     }
     if (addr[0] != DS18S20_ID && addr[0] != DS18B20_ID) {
       return false;
     }
     ds.reset();
     ds.select(addr);
     // Start conversion
     ds.write(0x44, 1);
     // Wait some time...
     delay(850);
     present = ds.reset();
     ds.select(addr);
     // Issue Read scratchpad command
     ds.write(0xBE);
     // Receive 9 bytes
     for ( i = 0; i < 9; i++) {
       data[i] = ds.read();
     }
     // Calculate temperature value
     temp = ( (data[1] << 8) + data[0] )*0.0625;
     return true;
 }
 

void setup() {

    Board.InitializeComputerCommunication(9600, "Initializing...");
    Board.TraceHeader("Tempetature Sensor DS18B20 ");
    Board.Trace("Ready...");
}

void loop() {

    if (_oneSecondTimeOut.IsTimeOut()) {

      if(getTemperature()) {
          Board.Trace("OK getting it");
          double celsius = temp;
          Board.Trace(Board.Format("[%s] %fC", Board.GetTime(), celsius));
      }
    }
}

